<html lang="en">

<!--
	Copyright (c) 1999-2004 by Digital Mars
	All Rights Reserved
	Written by Walter Bright
	www.digitalmars.com
  -->

<head>
<title>Digital Mars C/C++ Version Info</title>
</head>

<body bgcolor="white">
<a href="http://www.digitalmars.com/" target="_top"><IMG SRC="dmlogo.gif" BORDER=0 WIDTH=270 HEIGHT=53 ALT="www.digitalmars.com"></a>

[<a href="http://www.digitalmars.com/" title="www.digitalmars.com" target="_top">Home</a>]

<hr>
<h1>Digital Mars C/C++ Version Info</h1>

<ul>
	<li> Download <A HREF="ftp://ftp.digitalmars.com/dmc.zip" title="download dmc.zip">latest version</a> for Win32.
	<li>  What's new for <a href="#new840">C/C++ 8.40</a>
	<li>  What's new for <a href="#new839">C/C++ 8.39</a>
	<li>  What's new for <a href="#new838">C/C++ 8.38</a>
	<li>  What's new for <a href="#new837">C/C++ 8.37</a>
	<li>  What's new for <a href="#new836">C/C++ 8.36</a>
	<li>  What's new for <a href="#new835">C/C++ 8.35</a>
	<li>  What's new for <a href="#new834">C/C++ 8.34</a>
	<li>  What's new for <a href="#new833">C/C++ 8.33</a>
	<li>  What's new for <a href="#new832">C/C++ 8.32</a>
	<li>  What's new for <a href="#new831">C/C++ 8.31</a>
	<li>  What's new for <a href="#new830">C/C++ 8.30</a>
	<li>  What's new for <a href="#new829">C/C++ 8.29</a>
	<li>  What's new for <a href="#new828">C/C++ 8.28</a>
	<li>  What's new for <a href="#new827">C/C++ 8.27</a>
	<li>  What's new for <a href="#new826">C/C++ 8.26</a>
	<li>  What's new for <a href="#new825">C/C++ 8.25</a>
	<li>  What's new for <a href="#new823">C/C++ 8.23</a>
	<li>  What's new for <a href="#new822">C/C++ 8.22</a>
	<li>  What's new for <a href="#new820">C/C++ 8.20</a>
	<li>  What's new for <a href="#new81e">C/C++ 8.1e</a>
	<li>  What's new for <a href="#new81d">C/C++ 8.1d</a>
	<li>  What's new for <a href="#new81c">C/C++ 8.1c</a>
	<li>  What's new for <a href="#new81A">C/C++ 8.1A</a>
	<li>  What's new for <a href="#new818">C/C++ 8.18</a>
	<li>  What's new for <a href="#new817">C/C++ 8.17</a>
	<li>  What's new for <a href="#new816">C/C++ 8.16</a>
	<li>  What's new for <a href="#new815">C/C++ 8.15</a>
	<li>  What's new for <a href="#new813">C/C++ 8.13</a>
	<li>  What's new for <a href="#new812">C/C++ 8.12</a>
	<li>  What's new for <a href="#new810">C/C++ 8.10</a>
	<li>  What's new for <a href="#new80">C/C++ 8.0</a>
	<li>  What's new for <a href="#new76">C/C++ 7.6</a>
	<li>  What's new for <a href="#new75">C/C++ 7.5</a>
</ul>

<hr><!-- ======================================================= -->
<h3><a name="new840">WHAT'S NEW FOR C/C++ 8.40</a></h3>

<small><i>Feb 20, 2004</i></small>

<ul>
	<li> New/Changed
	<ul>
	</ul>
<ul>
</ul>
	<li> Bug fixes
<ul>
	<li> Fixed protected access problem with wxWindows.
	<li> Fixed recursion bug in strpbrk().
	<li> Fixed MI bug with function overloading.
</ul>
</ul>


<hr><!-- ======================================================= -->
<h3><a name="new839">WHAT'S NEW FOR C/C++ 8.39</a></h3>

<small><i>Feb 12, 2004</i></small>

<ul>
	<li> New/Changed
	<ul>
		<li> Added switches
		<a href="ctg/sc.html">-A89, -A90, -A94, -A95, -A99</a>
		for various values of
		<a href="ctg/predefined.html">__STDC_VERSION__</a>
		and standard C conformance.

		<li> Added functions <b>fwide</b>, <b>isblank</b>,
		<b>vfscanf</b>, <b>vscanf</b>, <b>vsscanf</b>,
		<b>vsnprintf</b>, <b>_Exit</b>, <b>lldiv</b>,
		<b>atoll</b>, <b>ilogb</b>, <b>logb</b>, <b>cbrt</b>,
		<b>exp2</b>, <b>erf</b>, <b>erfc</b>.

		<li> Added C99 formats to strftime, wcsftime.

		<li> Functions in fenv.h now return int, not void.

		<li> Changed _stprintf in \dm\include\tchar.h to map
		to sprintf and swprintf.

		<li> Removed "angle bracket hack" where &gt;&gt; token
		was interpreted as two greater than tokens to close a
		nested template argument list.

		<li> Member operator delete[] is now recognized.

		<li> Unnamed template parameters now allowed.

		<li> Implemented surrogate call functions.

		<li> Implemented TC1 issue #1.

		<li> Per C++98, typedef names can no longer appear
		after struct, class, union or enum.

		<li> Implemented some aspects of dependent/independent name
		lookup.

		<li> Fixed return value of fesetround().
	</ul>
<ul>
</ul>
	<li> Bug fixes
<ul>
	<li> Fixed values of LDBL_MAX_EXP and LDBL_MIN_EXP in float.h.
	<li> Fixed range problems with some long double math functions.
	<li> USHRT_MAX in limits.h is now signed.
	<li> ferror now shows error for a read of a file opened for write.
	<li> Updated asctime format to C99.
	<li> wcstok now correctly has 3 parameters.
	<li> Fixed vswprintf() signature.
	<li> Fixed Internal error: cgcod 1459.
	<li> Fixed Internal error: cod2 410.
	<li> Fixed Internal error: go 237.
	<li> Fixed Internal error: cgcs 213.
	<li> Fixed problem with spaces in preprocessor concatenations.
	<li> Tightened private/protected access checks.
	<li> Tightened error checking for templates.
	<li> Did a sweep through the C++98 spec, fixing several
	obscure issues.
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new838"><h3>WHAT'S NEW FOR C/C++ 8.38</h3></a>

<small><i>Nov 30, 2003</i></small>

<ul>
	<li> New/Changed
<ul>
	<li> Added __BASE_FILE__ predefined macro.
	<li> Source files not ending in newline are now allowed with
	C++ and -A (but are not for C and -A).
	<li> Now accepts \u and \U universal character names in identifiers.
	<li> Added <b>log2</b> functions.
</ul>
	<li> Bug fixes
<ul>
	<li> Template functions now inlined.
	<li> Fixed destructor call problem in virtual base initializer list.
	<li> Inherited exception specifications now checked for equivalence.
	<li> Fixed problem with ldexpl() and cosh().
	<li> Fixed optimizer peephole problem.
	<li> Fixed problem with outlined nested struct functions inside class template.
	<li> Fixed a couple of recursive macro expansion problems.
	<li> Fixed problem with //* comment following #else or #endif with -A.
	<li> Fixed problem with multiply defined local statics in inline
	functions with constructors.
	<li> Fixed obscure name lookup cases.
	<li> Fixed parsing problem with default template template parameters.
	<li> T can now be cast to T volatile&.
	<li> Fixed accuracy problem with log10t().
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new837"><h3>WHAT'S NEW FOR C/C++ 8.37</h3></a>

<small><i>Oct 17, 2003</i></small>

<ul>
<ul>
	<li> Fixed another problem with statics.
	<li> Fixed several problems with templates discovered by Bruce Eckel.
	<li> Fixed problem where nested class functions inside class templates
	sometimes did not get expanded inline properly.
	<li> Fixed problem with member function pointers of templated type
	inside template parameter list.
	<li> Added support for template-template-parameters.
	<li> C++ alternate keywords are now always enabled,
	instead of just with <b>-A</b>.
	<li> Fixed problems with friend scopes and multiple initializations
	of template statics.
	<li> Removed default support of \dm\stl, as only \dm\stlport\stlport
	will continue to be supported.
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new836"><h3>WHAT'S NEW FOR C/C++ 8.36</h3></a>

<small><i>Sep 8, 2003</i></small>

<ul>
<ul>
	<li> Fixed problem with statics introduced by 8.35.
	<li> More Boost issues fixed.
	<li> VLA's with destructors now give proper error message.
	<li> Fixed problem with iostream files.
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new835"><h3>WHAT'S NEW FOR C/C++ 8.35</h3></a>

<small><i>Aug 22, 2003</i></small>

<ul>
<ul>
	<li> Fixed problem with "bad type index" messages from the linker.
	This would sometimes happen if debug compiles, namespaces, and
	precompiled headers were used together.
	<li> Fixed problem with needing to #include &lt;typeinfo.h&gt;
	before &lt;exception&gt;.
	<li> Removed the _ prefixed long double names from math.h.
	<li> Now issues an error on negative array dimensions.
	<li> Fixed numerous issues with compiling Boost.
	<li> Fixed preprocessor problem with F. Tydeman's tests.
	<li> Fixed nanl() and copysignl().
	<li> Fixed bug with redefinitions of statics.
	<li> Fixed internal error out 637.
	<li> Fixed internal error type 149.
	<li> Upgraded to STLsoft 1.6.5.
</ul>
<li> Make
<ul>
	<li> Comment lines are now removed before \ line splicing (thanks,
	Matthew).
	<li> Command lines can be much longer now.
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new834"><h3>WHAT'S NEW FOR C/C++ 8.34</h3></a>

<small><i>Jun 1, 2003</i></small>

<ul>
	<li> Added STLsoft libraries; see \dm\stlsoft\readme\readme.txt.
	<li> Fixed numerous template problems.
	<li> Fixed several enum promotion problems.
	<li> Fixed problem with bringing ?: to common type.
	<li> Fixed problem with large stack frames.
	<li> Fixed argument reversal on movq2dq inline asm opcode.
	<li> Changed arguments (added count) to swprintf() and
	vswprintf() for compatibility with C99. This can break
	existing code.
	<li> Added 8087 opcodes feni, fneni, fdisi, and fndisi.
	<li> Fixed -A problems with stdlib.h and string.h.
	<li> type_info::before() is now const per C++98.
	<li> Fixed case insensitivity problem in RegExp.
	<li> Added standard headers &lt;exception&gt; and &lt;typeinfo&gt;
	per C++98.
	This required a rebuild of the stlport libraries and DLLs.
</ul>


<hr><!-- ======================================================= -->
<a name="new833"><h3>WHAT'S NEW FOR C/C++ 8.33</h3></a>

<small><i>Mar 18, 2003</i></small>

<ul>
	<li> Addes support for <tt>::template</tt> syntax.
	<li> Fixed numerous template problems.
	<li> Implemented hypotl().
	<li> Implemented frexpl().
	<li> ldexp() is now builtin to the compiler.
	<li> Fixed some problems compiling Boost.
	<li> Fixed some problems with template argument deduction.
	<li> Fixed rare case of loss of precision with long doubles.
	<li> Fixed problem with 16 bit DOS libraries and 8088 PC/XT.
</ul>


<hr><!-- ======================================================= -->
<a name="new832"><h3>WHAT'S NEW FOR C/C++ 8.32</h3></a>

<small><i>Jan 4, 2003</i></small>

<ul>
	<li> Fixed internal error cg87 2490.
	<li> Fixed gp fault for nested template expansions with non-type
	args.
	<li> Added predefined macro <b>__DMC_VERSION_STRING__</b>.
	<li> Implemented boolean conversions per C++98 4.12.
	<li> Upgraded namespace support to C++98.
	<li> Implemented overloading by enum.
	<li> Implemented Argument Dependent Lookup.
	<li> Implemented friend namespace qualified classes.
	<li> Fixed operator bool conversions.
	<li> C99 <b>restrict</b> is now always on for C compiling.
	<li> C99 dynamic sizeof works.
	<li> Fixed numerous bugs with namespaces and templates.
	<li> Redid how macro expansion worked to bring it in line with C99.
	This can break existing code.
	<li> operator-&gt;() can now accept any return type.
	<li> Added \dm\include\wctype.h.
	<li> Implemented template explicit instantiation.
	<li> Implemented _finddata_t, _findfirst, _findnext, _findclose.
	<li> Fixed obscure crash bug in exception unwinding.
	<li> Upgraded STLport to reflect improved compiler.
</ul>


<hr><!-- ======================================================= -->
<a name="new831"><h3>WHAT'S NEW FOR C/C++ 8.31</h3></a>

<small><i>Oct 17, 2002</i></small>

<ul>
<li> Bugs fixed
<ul>
	<li> Fixed bug with nested class member templates.
	<li> Fixed bug with inline asm and LGDT/LIDT operand matching.
</ul>
<li> Make 5.02
<ul>
	<li> Now accepts <b>~</b> rule flag.
	<li> Command line length increased from 127 to 996.
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new830"><h3>WHAT'S NEW FOR C/C++ 8.30</h3></a>

<small><i>Oct 8, 2002</i></small>

<ul>
<li> C
<ul>
	<li> <tt>static</tt> and <i>type-qualifier-list</i> now supported for
	     array dimension per C99 6.7.5.2.
	<li> Variable length arrays (VLAs) per C99 6.7.5.2 now implemented.
	<li> Implemented declarations in <i>clause-I</i> of <tt>for</tt>
	statement per C99 6.8.5.3.
	<li> Implemented mixing statements and declarations per
	C99 6.8.2-1.
	<li> Implemented implicit <tt>return 0;</tt> from <tt>main()</tt>
	per C99 5.1.2.2.3.
	<li> Updated fenv.h functions per C99 7.6.
</ul>
<li> C++
<ul>
	<li> Extended C++ with support for array declarations per C99 6.7.5.2.
	<li> Added type_info to typeinfo.h.
</ul>
<li> C and C++
<ul>
	<li> __declspec(import) now works with DOSX (-mx) memory model by
	generating an extra level of indirection like under Win32.
</ul>
<li> Bugs fixed
<ul>
	<li> Fixed internal error cgcod 2347.
	<li> Fixed internal error cgcod 1402.
	<li> Fixed internal error cg87 268.
	<li> Fixed internal error exp2 121.
	<li> Fixed internal error newman 963.
	<li> Fixed problem with template overload resolution.
	<li> Fixed forward template instantiation bug.
	<li> Fixed partial ordering with constants.
</ul>
</ul>


<hr><!-- ======================================================= -->
<a name="new829"><h3>WHAT'S NEW FOR C/C++ 8.29</h3></a>

<small><i>Jul 31, 2002</i></small>

<ul>
<li> C++
<ul>
<li> Implemented member template functions.
<li> Implemented member template classes.
<li> Implemented class template partial specializations.
<li> Implemented partial ordering of class template specializations.
<li> Implemented class template explicit specializations.
<li> Implemented template friends.
<li> Implemented new C++ 98 for statement scoping rules. This
     can be disabled with <b>-A-</b> (for backwards compatibility with
     old code), and then re-enabled with <b>-As</b>.
<li> For C++, changed 3rd operand of conditional operator from
     a conditional-expression to an assignment-expression.
     There is no switch to revert to the old behavior.
<li> Operator <tt>delete</tt> can now take cv-qualified pointers.
<li> <tt>main()</tt> now defaults to <tt>return 0;</tt> if no return
     is specified.
<li> Implemented function try blocks.
<li> Function templates instantiations that match non-template function
     declarations are now distinct functions. This can break some existing
     code, but the source fixes are worth doing to be standard compliant.
     Function template instantiations
     now include the template-argument-list as part of the function signature.
<li> Added <b>-wc</b> switch which warns on every occurance of a C style
     cast which should be replaced with the appropriate C++ style cast.
<li> Mangled names can now be considerably longer.
<!-- <li> Operator functions can now be overloaded based on enum types. -->
<li> Added STLport 4.5.3.
<li> Fixed el 2005 bug
</ul>
<li> C and C++
<ul>
<li> Implemented universal character names for strings and character literals.
<li> Fixed iasm 2585 bug
<li> Fixed error parsing REP MOVSD/CMPSD instructions
<li> Unrecognized preprocessing directives are now ignored in false
     conditionals (previously, an error was issued). <b>-A</b> will
     cause them to be an error.
<li> Fixed problem with -s stack probes in 16 bit code.
<li> Non-existing directories are now created as necessary when
     writing output files. This is convenient when writing .obj files
     to temporary directories.
</ul>
</ul>

<hr><!-- ======================================================= -->
<a name="new828"><h3>WHAT'S NEW FOR C/C++ 8.28</h3></a>

<small><i>May 22, 2002</i></small>

<ul>
<li> Added empty base class optimization.
<li> Added -Jb compiler switch to disable empty base class optimization
	for compatibility with code compiled with earlier compilers.
<li> Fixed cgobj 3034 bug
<li> Fixed cg87 256 bug
<li> Added:<br>
	<tt>#pragma DMC mfc</tt><br>
	for compatibility with MFC 4.2.
<li> Added -Aa- for compatibility with MFC 4.2.
<li> Empty array members of structs, such as:<br>
	char string[];<br>
     are now aligned based on the array subtype, rather
     than the widest type.
<li> Fixed bug with unsigned to double conversion.
<li> Fixed problem with handle passed to DllMain().
</ul>

<hr><!-- ======================================================= -->
<a name="new827"><h3>WHAT'S NEW FOR C/C++ 8.27</h3></a>

<small><i>Mar 6, 2002</i></small>

<ul>
<li> Renamed dm\include\strstrea.h to dm\include\strstream.h
<li> Fixed problem with disp_cursorcol and standout mode in win32 version
<li> Fixed bug with inline asm and copy propagation
<li> Fixed eh 683 bug
<li> Fixed cod1 1278 bug
<li> Fixed cg87 217 bug
<li> Now aligns double autos for faster floating point execution
<li> Added inline assembler support for Intel SSE and SSE2 instructions
<li> Added inline assembler support for AMD 3DNOW! instructions
<li> Added new instructions to OBJ2ASM disassembler
</ul>

<hr><!-- ======================================================= -->
<a name="new826"><h3>WHAT'S NEW FOR C/C++ 8.26</h3></a>

<small><i>Jan 23, 2002</i></small>

<ul>
<li> Added \dm\include\zmouse.h
<li> Fixed bug in float.h
<li> Improved code generation for long long's.
<li> Fixed long double conversions and unsigned long long's.
<li> Fixed tentative definition bug.
</ul>

<hr><!-- ======================================================= -->
<a name="new825"><h3>WHAT'S NEW FOR C/C++ 8.25</h3></a>

<small><i>Dec 14, 2001</i></small>

<ul>
<li> Added MicroEmacs text editor.
<li> Fixed IDDE Resource Editor.
<li> Fixed startup code to be compatible with D.
</ul>

For C:
<ul>
<li> Fixed bugs with 16 bit code generation.
</ul>

<hr><!-- ======================================================= -->
<a name="new823"><h3>WHAT'S NEW FOR C/C++ 8.23</h3></a>

For C++:
<ul>
<li> Fixed <b>eh 682</b> bug.
<li> Fixes for problems with template instantiation and exception handling.
</ul>

For C:
<ul>
<li> Fixed problems with C, -A, preprocessor, and //.
<li> Fixed dos_setdrive() bug for win32.
<li> Fix for _inpw() and _outpw() for DOSX.
</ul>

<hr><!-- ======================================================= -->
<a name="new822"><h3>WHAT'S NEW FOR C/C++ 8.22</h3></a>

10/28/01
<p>

For C:
<ul>
<li> Increased max string length.
<li> Fixed cg87 263 error.
</ul>

For C++:
<ul>
<li> Fixed bug with -D_MT and STL.
<li> Fixed template expansion bug with array constructors.
</ul>

STL:
<ul>
<li> Fixed stl_config.h conflict with windows.h
</ul>

Library:
<ul>
<li> Fixed bug in _kbhit() for Win32.
</ul>

<hr><!-- ======================================================= -->
<a name="new820"><h3>WHAT'S NEW FOR C/C++ 8.20</h3></a>

For C++:
<ul>
<li> Added SGI STL 3.3. Numerous fixes to support it.
<li> Templates are now instantiated only when semantically required,
rather than whenever referred to.
<li> Added header files <tt>cassert, cctype, cerrno, cfloat, ciso646,
climits, clocale, cmath, csetjmp, csignal, cstdarg, cstddef, cstdio,
cstdlib, cstring, ctime, cwchar, cwctype, new</tt>.
<li> Fixed C++ declarations for <tt>strchr()</tt>, etc., per C++98 21.4.
<li> Fixed warnings about 0 sized structs used before set.
<li> Fixed default constructor bug with <tt>new(p) char()</tt>.
<li> Fixed unused operator->() expansion inside template spurious error.
<li> In-class static const integral initializers now supported.
<li> Fixed default template parameter bug.
</ul>

<hr><!-- ======================================================= -->
<a name="new81e"><h3>WHAT'S NEW FOR C/C++ 8.1e</h3></a>

For C++:
<ul>
<li><b>-Ab</b> and <b>-Aw</b> are now always on
    (meaning that <tt>bool</tt> and <tt>wchar_t</tt>
    are real types, not typedefs).
    <font color="red">Warning:</font> This can break existing code.
<li><b>-Aa</b> is now always on
    (meaning that <tt>operator new[]</tt> and <tt>operator delete[]</tt>
     are separately overloadable)
    <font color="red">Warning:</font> This can break existing code.
<li><i>parameter-declarations</i> now allowed in function template
    <i>template-parameter-list</i>.
<li><tt>typename</tt> can now appear in <i>template-parameter</i>
    instead of <tt>class</tt>.
<li>Explicit template function <i>template-arguments</i> implemented.
<li>Partial ordering of function templates implemented.
<li><i>elaborated-type-specifier</i> (i.e. <tt>typename</tt>) implemented.
<li><tt>mutable</tt> implemented.
<li><tt>explicit</tt> implemented.
</ul>

<hr><!-- ======================================================= -->
<a name="new81d"><h3>WHAT'S NEW FOR C/C++ 8.1d</h3></a>

<ul>
<li>Fixed code gen bug with <b>-Ab</b>.
<li>Fixed name mangling with complex floating point types.
<li>Fixed code gen bug with complex floating point types.
<li>stdlib.h now compiles with <b>-A</b>.
<li>Added <a href="rtl/util.html">util.h</a>.
</ul>

<hr><!-- ======================================================= -->
<a name="new81c"><h3>WHAT'S NEW FOR C/C++ 8.1c</h3></a>

<ul>
<li><a href="rtl/regexp.html">Regular Expressions</a> now added to runtime library.
<li>Fixed code gen bugs with __interrupt functions.
<li>rint functions are now inlined by the compiler.
<li>fabsl and sqrtl are now inlined by the compiler.
<li>Fixed bug with /= for long doubles.
<li>Fixed long long support in library.
<li>Improved long double support in library.
</ul>

<hr><!-- ======================================================= -->
<a name="new81A"><h3>WHAT'S NEW FOR C/C++ 8.1A</h3></a>

<ul>
<li>Name mangling for type bool is changed from _X to _N, in order
to be more compatible with VC.
<li>Literal float support has now been brought in line with ANSI
C99.
<li>Floating point constants for other than static initializations are
not folded if the folding would result in any exception flags being
raised. This is per C99. To always fold the constants anyway, use the
-ff (fast float) flag.
<li>Fixed problems with hex long doubles.
</ul>

<hr><!-- ======================================================= -->
<a name="new818"><h3>WHAT'S NEW FOR C/C++ 8.18</h3></a>

<ul>
<li> Hex floats no longer turned off by -A.
<li> Long longs no longer turned off by -A.
<li> // comments in C no longer turned off by -A.
<li> The default CPU target is now the Pentium Pro (-6), not the Pentium.
</ul>

<hr><!-- ======================================================= -->
<a name="new817"><h3>WHAT'S NEW FOR C/C++ 8.17</h3></a>

<ul>
<li> Fixed problem with dllexport on function pointers.
<li> Added gc.h
<li> Added Hans Boehm garbage collector to rtl
<li> Added long double, %a and %A support to printf for win32
</ul>

<hr><!-- ======================================================= -->
<a name="new816"><h3>WHAT'S NEW FOR C/C++ 8.16</h3></a>

<ul>
<li> Fixed 16 bit code gen bugs.
<li> Added iso646.h
<li> Added stdint.h
<li> Added stdbool.h
<li> Added va_copy() to stdarg.h
<li> Added isxxxx() floating point comparison macros to math.h
</ul>

<hr><!-- ======================================================= -->
<a name="new815"><h3>WHAT'S NEW FOR C/C++ 8.15</h3></a>

<ul>
<li> Fixed spurious syntax error compiling some MFC code.
</ul>

<hr><!-- ======================================================= -->
<a name="new813"><h3>WHAT'S NEW FOR C/C++ 8.13</h3></a>

<ul>
<li> <font color="red">Now with 32 bit <b>X32</b> DOS extender support!</font>
<li> Fixed code generator support for <b>X32</b>.
</ul>

<hr><!-- ======================================================= -->
<a name="new812"><h3>WHAT'S NEW FOR C/C++ 8.12</h3></a>

<ul>
<li> Changed <b>__i</b> keyword to <b>__imaginary</b> due to numerous conflicts
     with existing code.
</ul>

<hr><!-- ======================================================= -->
<a name="new810"><h3>WHAT'S NEW FOR C/C++ 8.10</h3></a>

<ul>
<li> Added support for <b>__restrict</b> pointer syntax.
<li> Added support for macros with variable & blank argument lists per C99.
<li> Added support for <b>__func__</b> per C99 6.4.2.2.
<li> Added <a href="http://www.digitalmars.com/ctg/predefined.html">__FUNCTION__</a> predefined macro.
<li> Added <a href="http://www.digitalmars.com/ctg/predefined.html">__PRETTY_FUNCTION__</a> predefined macro.
<li> Fixed bug in <b>wcscmp()</b> for 0 length strings.
<li> <b>-Aa</b> switch to SC is now the default. There is no way to turn it off.
<li> Added <b>_Complex</b> and <b>_Imaginary</b> type support per C99.
<li> Renamed C++ complex class file <b>complex.h</b> to <b>oldcomplex.h</b>.
<li> Added new <b>complex.h</b> per C99.
<li> Added complex library functions per C99.
<li> Added <b>isinf()</b> per C99.
<li> Added <b>long double</b> support to <b>isxxx()</b> functions in <b>fp.h</b>.
</ul>

<hr><!-- ======================================================= -->
<a name="new80"><h3>WHAT'S NEW FOR C/C++ 8.0</h3></a>

<ul>
<li> Added <a href="http://www.digitalmars.com/ctg/predefined.html">__DMC__</a> predefined macro.
<li> Added <a href="http://www.digitalmars.com/ctg/sc#dswitch">-d switch</a> to generate make dependency information.
<li> Added <a href="http://www.digitalmars.com/ctg/debugstatement.html">debug statements</a>.
<li> Added <a href="http://www.digitalmars.com/ctg/debugstatement.html#debugdeclaration">debug declarations</a>.
<li> Added <a href="http://www.digitalmars.com/ctg/designbycontract.html">design by contract</a> features.
<li> Added ability to <a href="http://www.digitalmars.com/ctg/html.html">embed C in HTML</a> files.
<li> Added native support for 80 bit <b>long doubles</b> (Win32 only).
<li> Added support for CPU bit instructions via functions in <b>bitops.h</b>.
<li> Switch <a href="#switch_mn">-mn</a> is now the default instead of <b>-ms</b>.
<li> 16 bit preprocessor <b>spp.exe</b> no longer supported - use <b>sppn.exe</b>.
</ul>

<hr><!-- ======================================================= -->
<a name="new76"><h3>WHAT'S NEW FOR C/C++ 7.6</h3></a>

<ul>
<li> Better Code Generation
<li> Merged C and C++ Compilers.
	They are now in the same executable. This saves disk space and testing
	time.
</ul>

<hr><!-- ======================================================= -->
<a name="new75"><h3>WHAT'S NEW FOR C/C++ 7.5</h3></a>
<pre>
Added MMX Extensions

	New Intel MMX instructions now supported by the inline assembler.

Added Support for Alternative Names

	With -A and the C++ compiler, the alternative representations
	in the standard 2.9 are now supported. In the future, they will
	become the default, so don't use the following names otherwise:
	and and_eq bitand bitor compl not
	not_eq or or_eq xor xor_eq

Added -B[e|f|g|j] switches

	See "Definitive list of SC switches" for how they work. 
	The SCMSGS environment variable and SC.INI setting is no 
	longer supported.

Added #elseif directive, with same semantics as #elif.

Changed overload resolution rules to reflect ANSI C++ standard changes
regarding integral promotions vs integral conversions.

Added namespaces

Added -g5 switch
	See "Definitive list of SC switches".

Added #pragma setlocale("locale")
	See "Pragmas supported by SC/SC++".

Added _CPPRTTI and _CPPUNWIND predefined macros
	See "Predefined macros".

Added New Keywords
	explicit, mutable, typename - but the semantics of them aren't
	implemented.

Added __unaligned Keyword
	For unaligned pointer support for PowerPC. Ignored for Intel
	compiler.

Added Pentium Pro Instructions to Inline Assembler and OBJ2ASM.
	Added new P6 instructions:
		CMOVcc
		FCMOVcc
		FCOMI
		FCOMIP
		FUCOMI
		FUCOMIP
		RDMPC

Added -ND switch
	See "DEFINITIVE LIST OF SC SWITCHES", 
	and _MT and _DLL in "PREDEFINED MACROS".

-NLlibfile
	Added this switch. See "DEFINITIVE LIST OF SC SWITCHES".

__wacrtused
__wacrtused_con
	Added these for use in Win32 UNICODE apps. See "ACRTUSED".
</pre>
<hr><!-- ======================================================= -->

<p>
by Walter Bright<br>
Copyright (c) 1997-2003 by Digital Mars. All Rights Reserved.

</BODY>

</HTML>

